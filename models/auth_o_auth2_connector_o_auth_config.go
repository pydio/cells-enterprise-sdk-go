// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AuthOAuth2ConnectorOAuthConfig auth o auth2 connector o auth config
//
// swagger:model authOAuth2ConnectorOAuthConfig
type AuthOAuth2ConnectorOAuthConfig struct {

	// authorize URL
	AuthorizeURL string `json:"authorizeURL,omitempty"`

	// base URL
	BaseURL string `json:"baseURL,omitempty"`

	// client ID
	ClientID string `json:"clientID,omitempty"`

	// client secret
	ClientSecret string `json:"clientSecret,omitempty"`

	// groups
	Groups []string `json:"groups"`

	// redirect URI
	RedirectURI string `json:"redirectURI,omitempty"`

	// token URL
	TokenURL string `json:"tokenURL,omitempty"`

	// use broken auth header provider
	UseBrokenAuthHeaderProvider bool `json:"useBrokenAuthHeaderProvider,omitempty"`

	// use login as ID
	UseLoginAsID bool `json:"useLoginAsID,omitempty"`

	// user info URL
	UserInfoURL string `json:"userInfoURL,omitempty"`
}

// Validate validates this auth o auth2 connector o auth config
func (m *AuthOAuth2ConnectorOAuthConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this auth o auth2 connector o auth config based on context it is used
func (m *AuthOAuth2ConnectorOAuthConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuthOAuth2ConnectorOAuthConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthOAuth2ConnectorOAuthConfig) UnmarshalBinary(b []byte) error {
	var res AuthOAuth2ConnectorOAuthConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
