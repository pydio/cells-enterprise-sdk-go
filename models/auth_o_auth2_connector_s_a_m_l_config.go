// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AuthOAuth2ConnectorSAMLConfig auth o auth2 connector s a m l config
//
// swagger:model authOAuth2ConnectorSAMLConfig
type AuthOAuth2ConnectorSAMLConfig struct {

	// ca
	Ca string `json:"ca,omitempty"`

	// ca data
	CaData string `json:"caData,omitempty"`

	// email attr
	EmailAttr string `json:"emailAttr,omitempty"`

	// entity issuer
	EntityIssuer string `json:"entityIssuer,omitempty"`

	// groups attr
	GroupsAttr string `json:"groupsAttr,omitempty"`

	// groups delim
	GroupsDelim string `json:"groupsDelim,omitempty"`

	// insecure skip signature validation
	InsecureSkipSignatureValidation bool `json:"insecureSkipSignatureValidation,omitempty"`

	// name ID policy format
	NameIDPolicyFormat string `json:"nameIDPolicyFormat,omitempty"`

	// redirect URI
	RedirectURI string `json:"redirectURI,omitempty"`

	// sso issuer
	SsoIssuer string `json:"ssoIssuer,omitempty"`

	// sso URL
	SsoURL string `json:"ssoURL,omitempty"`

	// username attr
	UsernameAttr string `json:"usernameAttr,omitempty"`
}

// Validate validates this auth o auth2 connector s a m l config
func (m *AuthOAuth2ConnectorSAMLConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this auth o auth2 connector s a m l config based on context it is used
func (m *AuthOAuth2ConnectorSAMLConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuthOAuth2ConnectorSAMLConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthOAuth2ConnectorSAMLConfig) UnmarshalBinary(b []byte) error {
	var res AuthOAuth2ConnectorSAMLConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
