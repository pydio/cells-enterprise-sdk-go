// Code generated by go-swagger; DO NOT EDIT.

package enterprise_frontend_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// FrontLoginConnectorsReader is a Reader for the FrontLoginConnectors structure.
type FrontLoginConnectorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FrontLoginConnectorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFrontLoginConnectorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFrontLoginConnectorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFrontLoginConnectorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFrontLoginConnectorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFrontLoginConnectorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFrontLoginConnectorsOK creates a FrontLoginConnectorsOK with default headers values
func NewFrontLoginConnectorsOK() *FrontLoginConnectorsOK {
	return &FrontLoginConnectorsOK{}
}

/* FrontLoginConnectorsOK describes a response with status code 200, with default header values.

FrontLoginConnectorsOK front login connectors o k
*/
type FrontLoginConnectorsOK struct {
	Payload *models.EntFrontLoginConnectorsResponse
}

func (o *FrontLoginConnectorsOK) Error() string {
	return fmt.Sprintf("[GET /frontend/login/connectors][%d] frontLoginConnectorsOK  %+v", 200, o.Payload)
}
func (o *FrontLoginConnectorsOK) GetPayload() *models.EntFrontLoginConnectorsResponse {
	return o.Payload
}

func (o *FrontLoginConnectorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntFrontLoginConnectorsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFrontLoginConnectorsUnauthorized creates a FrontLoginConnectorsUnauthorized with default headers values
func NewFrontLoginConnectorsUnauthorized() *FrontLoginConnectorsUnauthorized {
	return &FrontLoginConnectorsUnauthorized{}
}

/* FrontLoginConnectorsUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type FrontLoginConnectorsUnauthorized struct {
}

func (o *FrontLoginConnectorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /frontend/login/connectors][%d] frontLoginConnectorsUnauthorized ", 401)
}

func (o *FrontLoginConnectorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFrontLoginConnectorsForbidden creates a FrontLoginConnectorsForbidden with default headers values
func NewFrontLoginConnectorsForbidden() *FrontLoginConnectorsForbidden {
	return &FrontLoginConnectorsForbidden{}
}

/* FrontLoginConnectorsForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type FrontLoginConnectorsForbidden struct {
	Payload *models.RestError
}

func (o *FrontLoginConnectorsForbidden) Error() string {
	return fmt.Sprintf("[GET /frontend/login/connectors][%d] frontLoginConnectorsForbidden  %+v", 403, o.Payload)
}
func (o *FrontLoginConnectorsForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *FrontLoginConnectorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFrontLoginConnectorsNotFound creates a FrontLoginConnectorsNotFound with default headers values
func NewFrontLoginConnectorsNotFound() *FrontLoginConnectorsNotFound {
	return &FrontLoginConnectorsNotFound{}
}

/* FrontLoginConnectorsNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type FrontLoginConnectorsNotFound struct {
	Payload *models.RestError
}

func (o *FrontLoginConnectorsNotFound) Error() string {
	return fmt.Sprintf("[GET /frontend/login/connectors][%d] frontLoginConnectorsNotFound  %+v", 404, o.Payload)
}
func (o *FrontLoginConnectorsNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *FrontLoginConnectorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFrontLoginConnectorsInternalServerError creates a FrontLoginConnectorsInternalServerError with default headers values
func NewFrontLoginConnectorsInternalServerError() *FrontLoginConnectorsInternalServerError {
	return &FrontLoginConnectorsInternalServerError{}
}

/* FrontLoginConnectorsInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type FrontLoginConnectorsInternalServerError struct {
	Payload *models.RestError
}

func (o *FrontLoginConnectorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /frontend/login/connectors][%d] frontLoginConnectorsInternalServerError  %+v", 500, o.Payload)
}
func (o *FrontLoginConnectorsInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *FrontLoginConnectorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
