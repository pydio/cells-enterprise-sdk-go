// Code generated by go-swagger; DO NOT EDIT.

package enterprise_token_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// ImpersonatePersonalAccessTokenReader is a Reader for the ImpersonatePersonalAccessToken structure.
type ImpersonatePersonalAccessTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImpersonatePersonalAccessTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImpersonatePersonalAccessTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImpersonatePersonalAccessTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImpersonatePersonalAccessTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImpersonatePersonalAccessTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImpersonatePersonalAccessTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImpersonatePersonalAccessTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImpersonatePersonalAccessTokenOK creates a ImpersonatePersonalAccessTokenOK with default headers values
func NewImpersonatePersonalAccessTokenOK() *ImpersonatePersonalAccessTokenOK {
	return &ImpersonatePersonalAccessTokenOK{}
}

/*
ImpersonatePersonalAccessTokenOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImpersonatePersonalAccessTokenOK struct {
	Payload *models.EntPersonalAccessTokenResponse
}

// IsSuccess returns true when this impersonate personal access token o k response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this impersonate personal access token o k response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this impersonate personal access token o k response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this impersonate personal access token o k response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this impersonate personal access token o k response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImpersonatePersonalAccessTokenOK) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenOK  %+v", 200, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenOK) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenOK  %+v", 200, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenOK) GetPayload() *models.EntPersonalAccessTokenResponse {
	return o.Payload
}

func (o *ImpersonatePersonalAccessTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntPersonalAccessTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonatePersonalAccessTokenUnauthorized creates a ImpersonatePersonalAccessTokenUnauthorized with default headers values
func NewImpersonatePersonalAccessTokenUnauthorized() *ImpersonatePersonalAccessTokenUnauthorized {
	return &ImpersonatePersonalAccessTokenUnauthorized{}
}

/*
ImpersonatePersonalAccessTokenUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ImpersonatePersonalAccessTokenUnauthorized struct {
}

// IsSuccess returns true when this impersonate personal access token unauthorized response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this impersonate personal access token unauthorized response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this impersonate personal access token unauthorized response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this impersonate personal access token unauthorized response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this impersonate personal access token unauthorized response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImpersonatePersonalAccessTokenUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenUnauthorized ", 401)
}

func (o *ImpersonatePersonalAccessTokenUnauthorized) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenUnauthorized ", 401)
}

func (o *ImpersonatePersonalAccessTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImpersonatePersonalAccessTokenForbidden creates a ImpersonatePersonalAccessTokenForbidden with default headers values
func NewImpersonatePersonalAccessTokenForbidden() *ImpersonatePersonalAccessTokenForbidden {
	return &ImpersonatePersonalAccessTokenForbidden{}
}

/*
ImpersonatePersonalAccessTokenForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type ImpersonatePersonalAccessTokenForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this impersonate personal access token forbidden response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this impersonate personal access token forbidden response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this impersonate personal access token forbidden response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this impersonate personal access token forbidden response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this impersonate personal access token forbidden response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImpersonatePersonalAccessTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenForbidden  %+v", 403, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenForbidden) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenForbidden  %+v", 403, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ImpersonatePersonalAccessTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonatePersonalAccessTokenNotFound creates a ImpersonatePersonalAccessTokenNotFound with default headers values
func NewImpersonatePersonalAccessTokenNotFound() *ImpersonatePersonalAccessTokenNotFound {
	return &ImpersonatePersonalAccessTokenNotFound{}
}

/*
ImpersonatePersonalAccessTokenNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ImpersonatePersonalAccessTokenNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this impersonate personal access token not found response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this impersonate personal access token not found response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this impersonate personal access token not found response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this impersonate personal access token not found response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this impersonate personal access token not found response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImpersonatePersonalAccessTokenNotFound) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenNotFound  %+v", 404, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenNotFound) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenNotFound  %+v", 404, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ImpersonatePersonalAccessTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonatePersonalAccessTokenInternalServerError creates a ImpersonatePersonalAccessTokenInternalServerError with default headers values
func NewImpersonatePersonalAccessTokenInternalServerError() *ImpersonatePersonalAccessTokenInternalServerError {
	return &ImpersonatePersonalAccessTokenInternalServerError{}
}

/*
ImpersonatePersonalAccessTokenInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ImpersonatePersonalAccessTokenInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this impersonate personal access token internal server error response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this impersonate personal access token internal server error response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this impersonate personal access token internal server error response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this impersonate personal access token internal server error response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this impersonate personal access token internal server error response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImpersonatePersonalAccessTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenInternalServerError) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] impersonatePersonalAccessTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ImpersonatePersonalAccessTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImpersonatePersonalAccessTokenDefault creates a ImpersonatePersonalAccessTokenDefault with default headers values
func NewImpersonatePersonalAccessTokenDefault(code int) *ImpersonatePersonalAccessTokenDefault {
	return &ImpersonatePersonalAccessTokenDefault{
		_statusCode: code,
	}
}

/*
ImpersonatePersonalAccessTokenDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImpersonatePersonalAccessTokenDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the impersonate personal access token default response
func (o *ImpersonatePersonalAccessTokenDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this impersonate personal access token default response has a 2xx status code
func (o *ImpersonatePersonalAccessTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this impersonate personal access token default response has a 3xx status code
func (o *ImpersonatePersonalAccessTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this impersonate personal access token default response has a 4xx status code
func (o *ImpersonatePersonalAccessTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this impersonate personal access token default response has a 5xx status code
func (o *ImpersonatePersonalAccessTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this impersonate personal access token default response a status code equal to that given
func (o *ImpersonatePersonalAccessTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ImpersonatePersonalAccessTokenDefault) Error() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] ImpersonatePersonalAccessToken default  %+v", o._statusCode, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenDefault) String() string {
	return fmt.Sprintf("[POST /auth/token/impersonate][%d] ImpersonatePersonalAccessToken default  %+v", o._statusCode, o.Payload)
}

func (o *ImpersonatePersonalAccessTokenDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ImpersonatePersonalAccessTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
