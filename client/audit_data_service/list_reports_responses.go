// Code generated by go-swagger; DO NOT EDIT.

package audit_data_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// ListReportsReader is a Reader for the ListReports structure.
type ListReportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListReportsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListReportsOK creates a ListReportsOK with default headers values
func NewListReportsOK() *ListReportsOK {
	return &ListReportsOK{}
}

/*
ListReportsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListReportsOK struct {
	Payload *models.ReportsListReportsResponse
}

// IsSuccess returns true when this list reports o k response has a 2xx status code
func (o *ListReportsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list reports o k response has a 3xx status code
func (o *ListReportsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list reports o k response has a 4xx status code
func (o *ListReportsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list reports o k response has a 5xx status code
func (o *ListReportsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list reports o k response a status code equal to that given
func (o *ListReportsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list reports o k response
func (o *ListReportsOK) Code() int {
	return 200
}

func (o *ListReportsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit/data/reports][%d] listReportsOK %s", 200, payload)
}

func (o *ListReportsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit/data/reports][%d] listReportsOK %s", 200, payload)
}

func (o *ListReportsOK) GetPayload() *models.ReportsListReportsResponse {
	return o.Payload
}

func (o *ListReportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportsListReportsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportsDefault creates a ListReportsDefault with default headers values
func NewListReportsDefault(code int) *ListReportsDefault {
	return &ListReportsDefault{
		_statusCode: code,
	}
}

/*
ListReportsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListReportsDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this list reports default response has a 2xx status code
func (o *ListReportsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list reports default response has a 3xx status code
func (o *ListReportsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list reports default response has a 4xx status code
func (o *ListReportsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list reports default response has a 5xx status code
func (o *ListReportsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list reports default response a status code equal to that given
func (o *ListReportsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list reports default response
func (o *ListReportsDefault) Code() int {
	return o._statusCode
}

func (o *ListReportsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit/data/reports][%d] ListReports default %s", o._statusCode, payload)
}

func (o *ListReportsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /audit/data/reports][%d] ListReports default %s", o._statusCode, payload)
}

func (o *ListReportsDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ListReportsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
