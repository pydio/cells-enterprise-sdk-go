// Code generated by go-swagger; DO NOT EDIT.

package audit_data_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// SharedResourcesReader is a Reader for the SharedResources structure.
type SharedResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSharedResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSharedResourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSharedResourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSharedResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSharedResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSharedResourcesOK creates a SharedResourcesOK with default headers values
func NewSharedResourcesOK() *SharedResourcesOK {
	return &SharedResourcesOK{}
}

/* SharedResourcesOK describes a response with status code 200, with default header values.

SharedResourcesOK shared resources o k
*/
type SharedResourcesOK struct {
	Payload *models.ReportsSharedResourcesResponse
}

func (o *SharedResourcesOK) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesOK  %+v", 200, o.Payload)
}
func (o *SharedResourcesOK) GetPayload() *models.ReportsSharedResourcesResponse {
	return o.Payload
}

func (o *SharedResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportsSharedResourcesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesUnauthorized creates a SharedResourcesUnauthorized with default headers values
func NewSharedResourcesUnauthorized() *SharedResourcesUnauthorized {
	return &SharedResourcesUnauthorized{}
}

/* SharedResourcesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SharedResourcesUnauthorized struct {
}

func (o *SharedResourcesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesUnauthorized ", 401)
}

func (o *SharedResourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSharedResourcesForbidden creates a SharedResourcesForbidden with default headers values
func NewSharedResourcesForbidden() *SharedResourcesForbidden {
	return &SharedResourcesForbidden{}
}

/* SharedResourcesForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type SharedResourcesForbidden struct {
	Payload *models.RestError
}

func (o *SharedResourcesForbidden) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesForbidden  %+v", 403, o.Payload)
}
func (o *SharedResourcesForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesNotFound creates a SharedResourcesNotFound with default headers values
func NewSharedResourcesNotFound() *SharedResourcesNotFound {
	return &SharedResourcesNotFound{}
}

/* SharedResourcesNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SharedResourcesNotFound struct {
	Payload *models.RestError
}

func (o *SharedResourcesNotFound) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesNotFound  %+v", 404, o.Payload)
}
func (o *SharedResourcesNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesInternalServerError creates a SharedResourcesInternalServerError with default headers values
func NewSharedResourcesInternalServerError() *SharedResourcesInternalServerError {
	return &SharedResourcesInternalServerError{}
}

/* SharedResourcesInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SharedResourcesInternalServerError struct {
	Payload *models.RestError
}

func (o *SharedResourcesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesInternalServerError  %+v", 500, o.Payload)
}
func (o *SharedResourcesInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
