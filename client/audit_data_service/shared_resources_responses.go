// Code generated by go-swagger; DO NOT EDIT.

package audit_data_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// SharedResourcesReader is a Reader for the SharedResources structure.
type SharedResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSharedResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSharedResourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSharedResourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSharedResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSharedResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSharedResourcesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSharedResourcesOK creates a SharedResourcesOK with default headers values
func NewSharedResourcesOK() *SharedResourcesOK {
	return &SharedResourcesOK{}
}

/*
SharedResourcesOK describes a response with status code 200, with default header values.

A successful response.
*/
type SharedResourcesOK struct {
	Payload *models.ReportsSharedResourcesResponse
}

// IsSuccess returns true when this shared resources o k response has a 2xx status code
func (o *SharedResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this shared resources o k response has a 3xx status code
func (o *SharedResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shared resources o k response has a 4xx status code
func (o *SharedResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this shared resources o k response has a 5xx status code
func (o *SharedResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this shared resources o k response a status code equal to that given
func (o *SharedResourcesOK) IsCode(code int) bool {
	return code == 200
}

func (o *SharedResourcesOK) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesOK  %+v", 200, o.Payload)
}

func (o *SharedResourcesOK) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesOK  %+v", 200, o.Payload)
}

func (o *SharedResourcesOK) GetPayload() *models.ReportsSharedResourcesResponse {
	return o.Payload
}

func (o *SharedResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportsSharedResourcesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesUnauthorized creates a SharedResourcesUnauthorized with default headers values
func NewSharedResourcesUnauthorized() *SharedResourcesUnauthorized {
	return &SharedResourcesUnauthorized{}
}

/*
SharedResourcesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SharedResourcesUnauthorized struct {
}

// IsSuccess returns true when this shared resources unauthorized response has a 2xx status code
func (o *SharedResourcesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shared resources unauthorized response has a 3xx status code
func (o *SharedResourcesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shared resources unauthorized response has a 4xx status code
func (o *SharedResourcesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this shared resources unauthorized response has a 5xx status code
func (o *SharedResourcesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this shared resources unauthorized response a status code equal to that given
func (o *SharedResourcesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SharedResourcesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesUnauthorized ", 401)
}

func (o *SharedResourcesUnauthorized) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesUnauthorized ", 401)
}

func (o *SharedResourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSharedResourcesForbidden creates a SharedResourcesForbidden with default headers values
func NewSharedResourcesForbidden() *SharedResourcesForbidden {
	return &SharedResourcesForbidden{}
}

/*
SharedResourcesForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type SharedResourcesForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this shared resources forbidden response has a 2xx status code
func (o *SharedResourcesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shared resources forbidden response has a 3xx status code
func (o *SharedResourcesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shared resources forbidden response has a 4xx status code
func (o *SharedResourcesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this shared resources forbidden response has a 5xx status code
func (o *SharedResourcesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this shared resources forbidden response a status code equal to that given
func (o *SharedResourcesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SharedResourcesForbidden) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesForbidden  %+v", 403, o.Payload)
}

func (o *SharedResourcesForbidden) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesForbidden  %+v", 403, o.Payload)
}

func (o *SharedResourcesForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesNotFound creates a SharedResourcesNotFound with default headers values
func NewSharedResourcesNotFound() *SharedResourcesNotFound {
	return &SharedResourcesNotFound{}
}

/*
SharedResourcesNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SharedResourcesNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this shared resources not found response has a 2xx status code
func (o *SharedResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shared resources not found response has a 3xx status code
func (o *SharedResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shared resources not found response has a 4xx status code
func (o *SharedResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this shared resources not found response has a 5xx status code
func (o *SharedResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this shared resources not found response a status code equal to that given
func (o *SharedResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SharedResourcesNotFound) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesNotFound  %+v", 404, o.Payload)
}

func (o *SharedResourcesNotFound) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesNotFound  %+v", 404, o.Payload)
}

func (o *SharedResourcesNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesInternalServerError creates a SharedResourcesInternalServerError with default headers values
func NewSharedResourcesInternalServerError() *SharedResourcesInternalServerError {
	return &SharedResourcesInternalServerError{}
}

/*
SharedResourcesInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SharedResourcesInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this shared resources internal server error response has a 2xx status code
func (o *SharedResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this shared resources internal server error response has a 3xx status code
func (o *SharedResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this shared resources internal server error response has a 4xx status code
func (o *SharedResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this shared resources internal server error response has a 5xx status code
func (o *SharedResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this shared resources internal server error response a status code equal to that given
func (o *SharedResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SharedResourcesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesInternalServerError  %+v", 500, o.Payload)
}

func (o *SharedResourcesInternalServerError) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] sharedResourcesInternalServerError  %+v", 500, o.Payload)
}

func (o *SharedResourcesInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SharedResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedResourcesDefault creates a SharedResourcesDefault with default headers values
func NewSharedResourcesDefault(code int) *SharedResourcesDefault {
	return &SharedResourcesDefault{
		_statusCode: code,
	}
}

/*
SharedResourcesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SharedResourcesDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the shared resources default response
func (o *SharedResourcesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this shared resources default response has a 2xx status code
func (o *SharedResourcesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this shared resources default response has a 3xx status code
func (o *SharedResourcesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this shared resources default response has a 4xx status code
func (o *SharedResourcesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this shared resources default response has a 5xx status code
func (o *SharedResourcesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this shared resources default response a status code equal to that given
func (o *SharedResourcesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *SharedResourcesDefault) Error() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] SharedResources default  %+v", o._statusCode, o.Payload)
}

func (o *SharedResourcesDefault) String() string {
	return fmt.Sprintf("[POST /audit/data/shares][%d] SharedResources default  %+v", o._statusCode, o.Payload)
}

func (o *SharedResourcesDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *SharedResourcesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
