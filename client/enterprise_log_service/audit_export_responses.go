// Code generated by go-swagger; DO NOT EDIT.

package enterprise_log_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// AuditExportReader is a Reader for the AuditExport structure.
type AuditExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuditExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuditExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAuditExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuditExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuditExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuditExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuditExportOK creates a AuditExportOK with default headers values
func NewAuditExportOK() *AuditExportOK {
	return &AuditExportOK{}
}

/* AuditExportOK describes a response with status code 200, with default header values.

AuditExportOK audit export o k
*/
type AuditExportOK struct {
	Payload *models.RestLogMessageCollection
}

func (o *AuditExportOK) Error() string {
	return fmt.Sprintf("[POST /log/audit/export][%d] auditExportOK  %+v", 200, o.Payload)
}
func (o *AuditExportOK) GetPayload() *models.RestLogMessageCollection {
	return o.Payload
}

func (o *AuditExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestLogMessageCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditExportUnauthorized creates a AuditExportUnauthorized with default headers values
func NewAuditExportUnauthorized() *AuditExportUnauthorized {
	return &AuditExportUnauthorized{}
}

/* AuditExportUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type AuditExportUnauthorized struct {
}

func (o *AuditExportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /log/audit/export][%d] auditExportUnauthorized ", 401)
}

func (o *AuditExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuditExportForbidden creates a AuditExportForbidden with default headers values
func NewAuditExportForbidden() *AuditExportForbidden {
	return &AuditExportForbidden{}
}

/* AuditExportForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type AuditExportForbidden struct {
	Payload *models.RestError
}

func (o *AuditExportForbidden) Error() string {
	return fmt.Sprintf("[POST /log/audit/export][%d] auditExportForbidden  %+v", 403, o.Payload)
}
func (o *AuditExportForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *AuditExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditExportNotFound creates a AuditExportNotFound with default headers values
func NewAuditExportNotFound() *AuditExportNotFound {
	return &AuditExportNotFound{}
}

/* AuditExportNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type AuditExportNotFound struct {
	Payload *models.RestError
}

func (o *AuditExportNotFound) Error() string {
	return fmt.Sprintf("[POST /log/audit/export][%d] auditExportNotFound  %+v", 404, o.Payload)
}
func (o *AuditExportNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *AuditExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditExportInternalServerError creates a AuditExportInternalServerError with default headers values
func NewAuditExportInternalServerError() *AuditExportInternalServerError {
	return &AuditExportInternalServerError{}
}

/* AuditExportInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type AuditExportInternalServerError struct {
	Payload *models.RestError
}

func (o *AuditExportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /log/audit/export][%d] auditExportInternalServerError  %+v", 500, o.Payload)
}
func (o *AuditExportInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *AuditExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
