// Code generated by go-swagger; DO NOT EDIT.

package enterprise_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutOAuth2ClientReader is a Reader for the PutOAuth2Client structure.
type PutOAuth2ClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOAuth2ClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOAuth2ClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPutOAuth2ClientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutOAuth2ClientOK creates a PutOAuth2ClientOK with default headers values
func NewPutOAuth2ClientOK() *PutOAuth2ClientOK {
	return &PutOAuth2ClientOK{}
}

/*
PutOAuth2ClientOK describes a response with status code 200, with default header values.

A successful response.
*/
type PutOAuth2ClientOK struct {
	Payload *models.EntOAuth2ClientResponse
}

// IsSuccess returns true when this put o auth2 client o k response has a 2xx status code
func (o *PutOAuth2ClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put o auth2 client o k response has a 3xx status code
func (o *PutOAuth2ClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put o auth2 client o k response has a 4xx status code
func (o *PutOAuth2ClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put o auth2 client o k response has a 5xx status code
func (o *PutOAuth2ClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put o auth2 client o k response a status code equal to that given
func (o *PutOAuth2ClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put o auth2 client o k response
func (o *PutOAuth2ClientOK) Code() int {
	return 200
}

func (o *PutOAuth2ClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /config/oauth2clients/{client_id}][%d] putOAuth2ClientOK %s", 200, payload)
}

func (o *PutOAuth2ClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /config/oauth2clients/{client_id}][%d] putOAuth2ClientOK %s", 200, payload)
}

func (o *PutOAuth2ClientOK) GetPayload() *models.EntOAuth2ClientResponse {
	return o.Payload
}

func (o *PutOAuth2ClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntOAuth2ClientResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ClientDefault creates a PutOAuth2ClientDefault with default headers values
func NewPutOAuth2ClientDefault(code int) *PutOAuth2ClientDefault {
	return &PutOAuth2ClientDefault{
		_statusCode: code,
	}
}

/*
PutOAuth2ClientDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PutOAuth2ClientDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this put o auth2 client default response has a 2xx status code
func (o *PutOAuth2ClientDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put o auth2 client default response has a 3xx status code
func (o *PutOAuth2ClientDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put o auth2 client default response has a 4xx status code
func (o *PutOAuth2ClientDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put o auth2 client default response has a 5xx status code
func (o *PutOAuth2ClientDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put o auth2 client default response a status code equal to that given
func (o *PutOAuth2ClientDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put o auth2 client default response
func (o *PutOAuth2ClientDefault) Code() int {
	return o._statusCode
}

func (o *PutOAuth2ClientDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /config/oauth2clients/{client_id}][%d] PutOAuth2Client default %s", o._statusCode, payload)
}

func (o *PutOAuth2ClientDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /config/oauth2clients/{client_id}][%d] PutOAuth2Client default %s", o._statusCode, payload)
}

func (o *PutOAuth2ClientDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PutOAuth2ClientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PutOAuth2ClientBody put o auth2 client body
swagger:model PutOAuth2ClientBody
*/
type PutOAuth2ClientBody struct {

	// audience
	Audience []string `json:"audience"`

	// client name
	ClientName string `json:"client_name,omitempty"`

	// client secret
	ClientSecret string `json:"client_secret,omitempty"`

	// grant types
	GrantTypes []string `json:"grant_types"`

	// redirect uris
	RedirectUris []string `json:"redirect_uris"`

	// response types
	ResponseTypes []string `json:"response_types"`

	// scope
	Scope string `json:"scope,omitempty"`
}

// Validate validates this put o auth2 client body
func (o *PutOAuth2ClientBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put o auth2 client body based on context it is used
func (o *PutOAuth2ClientBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutOAuth2ClientBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutOAuth2ClientBody) UnmarshalBinary(b []byte) error {
	var res PutOAuth2ClientBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
