// Code generated by go-swagger; DO NOT EDIT.

package enterprise_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// DeleteVirtualNodeReader is a Reader for the DeleteVirtualNode structure.
type DeleteVirtualNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVirtualNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVirtualNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteVirtualNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVirtualNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVirtualNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteVirtualNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVirtualNodeOK creates a DeleteVirtualNodeOK with default headers values
func NewDeleteVirtualNodeOK() *DeleteVirtualNodeOK {
	return &DeleteVirtualNodeOK{}
}

/* DeleteVirtualNodeOK describes a response with status code 200, with default header values.

DeleteVirtualNodeOK delete virtual node o k
*/
type DeleteVirtualNodeOK struct {
	Payload *models.EntDeleteVirtualNodeResponse
}

func (o *DeleteVirtualNodeOK) Error() string {
	return fmt.Sprintf("[DELETE /config/virtualnodes/{Uuid}][%d] deleteVirtualNodeOK  %+v", 200, o.Payload)
}
func (o *DeleteVirtualNodeOK) GetPayload() *models.EntDeleteVirtualNodeResponse {
	return o.Payload
}

func (o *DeleteVirtualNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntDeleteVirtualNodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualNodeUnauthorized creates a DeleteVirtualNodeUnauthorized with default headers values
func NewDeleteVirtualNodeUnauthorized() *DeleteVirtualNodeUnauthorized {
	return &DeleteVirtualNodeUnauthorized{}
}

/* DeleteVirtualNodeUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type DeleteVirtualNodeUnauthorized struct {
}

func (o *DeleteVirtualNodeUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /config/virtualnodes/{Uuid}][%d] deleteVirtualNodeUnauthorized ", 401)
}

func (o *DeleteVirtualNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVirtualNodeForbidden creates a DeleteVirtualNodeForbidden with default headers values
func NewDeleteVirtualNodeForbidden() *DeleteVirtualNodeForbidden {
	return &DeleteVirtualNodeForbidden{}
}

/* DeleteVirtualNodeForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type DeleteVirtualNodeForbidden struct {
	Payload *models.RestError
}

func (o *DeleteVirtualNodeForbidden) Error() string {
	return fmt.Sprintf("[DELETE /config/virtualnodes/{Uuid}][%d] deleteVirtualNodeForbidden  %+v", 403, o.Payload)
}
func (o *DeleteVirtualNodeForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteVirtualNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualNodeNotFound creates a DeleteVirtualNodeNotFound with default headers values
func NewDeleteVirtualNodeNotFound() *DeleteVirtualNodeNotFound {
	return &DeleteVirtualNodeNotFound{}
}

/* DeleteVirtualNodeNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type DeleteVirtualNodeNotFound struct {
	Payload *models.RestError
}

func (o *DeleteVirtualNodeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /config/virtualnodes/{Uuid}][%d] deleteVirtualNodeNotFound  %+v", 404, o.Payload)
}
func (o *DeleteVirtualNodeNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteVirtualNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualNodeInternalServerError creates a DeleteVirtualNodeInternalServerError with default headers values
func NewDeleteVirtualNodeInternalServerError() *DeleteVirtualNodeInternalServerError {
	return &DeleteVirtualNodeInternalServerError{}
}

/* DeleteVirtualNodeInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type DeleteVirtualNodeInternalServerError struct {
	Payload *models.RestError
}

func (o *DeleteVirtualNodeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /config/virtualnodes/{Uuid}][%d] deleteVirtualNodeInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteVirtualNodeInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteVirtualNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
