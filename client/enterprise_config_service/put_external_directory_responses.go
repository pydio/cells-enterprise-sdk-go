// Code generated by go-swagger; DO NOT EDIT.

package enterprise_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutExternalDirectoryReader is a Reader for the PutExternalDirectory structure.
type PutExternalDirectoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutExternalDirectoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutExternalDirectoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutExternalDirectoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutExternalDirectoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutExternalDirectoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutExternalDirectoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutExternalDirectoryOK creates a PutExternalDirectoryOK with default headers values
func NewPutExternalDirectoryOK() *PutExternalDirectoryOK {
	return &PutExternalDirectoryOK{}
}

/* PutExternalDirectoryOK describes a response with status code 200, with default header values.

PutExternalDirectoryOK put external directory o k
*/
type PutExternalDirectoryOK struct {
	Payload *models.EntExternalDirectoryResponse
}

func (o *PutExternalDirectoryOK) Error() string {
	return fmt.Sprintf("[PUT /config/directories/{ConfigId}][%d] putExternalDirectoryOK  %+v", 200, o.Payload)
}
func (o *PutExternalDirectoryOK) GetPayload() *models.EntExternalDirectoryResponse {
	return o.Payload
}

func (o *PutExternalDirectoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntExternalDirectoryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalDirectoryUnauthorized creates a PutExternalDirectoryUnauthorized with default headers values
func NewPutExternalDirectoryUnauthorized() *PutExternalDirectoryUnauthorized {
	return &PutExternalDirectoryUnauthorized{}
}

/* PutExternalDirectoryUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutExternalDirectoryUnauthorized struct {
}

func (o *PutExternalDirectoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /config/directories/{ConfigId}][%d] putExternalDirectoryUnauthorized ", 401)
}

func (o *PutExternalDirectoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutExternalDirectoryForbidden creates a PutExternalDirectoryForbidden with default headers values
func NewPutExternalDirectoryForbidden() *PutExternalDirectoryForbidden {
	return &PutExternalDirectoryForbidden{}
}

/* PutExternalDirectoryForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutExternalDirectoryForbidden struct {
	Payload *models.RestError
}

func (o *PutExternalDirectoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /config/directories/{ConfigId}][%d] putExternalDirectoryForbidden  %+v", 403, o.Payload)
}
func (o *PutExternalDirectoryForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutExternalDirectoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalDirectoryNotFound creates a PutExternalDirectoryNotFound with default headers values
func NewPutExternalDirectoryNotFound() *PutExternalDirectoryNotFound {
	return &PutExternalDirectoryNotFound{}
}

/* PutExternalDirectoryNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutExternalDirectoryNotFound struct {
	Payload *models.RestError
}

func (o *PutExternalDirectoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /config/directories/{ConfigId}][%d] putExternalDirectoryNotFound  %+v", 404, o.Payload)
}
func (o *PutExternalDirectoryNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutExternalDirectoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutExternalDirectoryInternalServerError creates a PutExternalDirectoryInternalServerError with default headers values
func NewPutExternalDirectoryInternalServerError() *PutExternalDirectoryInternalServerError {
	return &PutExternalDirectoryInternalServerError{}
}

/* PutExternalDirectoryInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutExternalDirectoryInternalServerError struct {
	Payload *models.RestError
}

func (o *PutExternalDirectoryInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config/directories/{ConfigId}][%d] putExternalDirectoryInternalServerError  %+v", 500, o.Payload)
}
func (o *PutExternalDirectoryInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutExternalDirectoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
