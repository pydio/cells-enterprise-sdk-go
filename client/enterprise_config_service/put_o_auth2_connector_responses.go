// Code generated by go-swagger; DO NOT EDIT.

package enterprise_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutOAuth2ConnectorReader is a Reader for the PutOAuth2Connector structure.
type PutOAuth2ConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOAuth2ConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOAuth2ConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutOAuth2ConnectorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOAuth2ConnectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOAuth2ConnectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOAuth2ConnectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOAuth2ConnectorOK creates a PutOAuth2ConnectorOK with default headers values
func NewPutOAuth2ConnectorOK() *PutOAuth2ConnectorOK {
	return &PutOAuth2ConnectorOK{}
}

/* PutOAuth2ConnectorOK describes a response with status code 200, with default header values.

PutOAuth2ConnectorOK put o auth2 connector o k
*/
type PutOAuth2ConnectorOK struct {
	Payload *models.EntOAuth2ConnectorResponse
}

func (o *PutOAuth2ConnectorOK) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors/{id}][%d] putOAuth2ConnectorOK  %+v", 200, o.Payload)
}
func (o *PutOAuth2ConnectorOK) GetPayload() *models.EntOAuth2ConnectorResponse {
	return o.Payload
}

func (o *PutOAuth2ConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntOAuth2ConnectorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorUnauthorized creates a PutOAuth2ConnectorUnauthorized with default headers values
func NewPutOAuth2ConnectorUnauthorized() *PutOAuth2ConnectorUnauthorized {
	return &PutOAuth2ConnectorUnauthorized{}
}

/* PutOAuth2ConnectorUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutOAuth2ConnectorUnauthorized struct {
}

func (o *PutOAuth2ConnectorUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors/{id}][%d] putOAuth2ConnectorUnauthorized ", 401)
}

func (o *PutOAuth2ConnectorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOAuth2ConnectorForbidden creates a PutOAuth2ConnectorForbidden with default headers values
func NewPutOAuth2ConnectorForbidden() *PutOAuth2ConnectorForbidden {
	return &PutOAuth2ConnectorForbidden{}
}

/* PutOAuth2ConnectorForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutOAuth2ConnectorForbidden struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorForbidden) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors/{id}][%d] putOAuth2ConnectorForbidden  %+v", 403, o.Payload)
}
func (o *PutOAuth2ConnectorForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorNotFound creates a PutOAuth2ConnectorNotFound with default headers values
func NewPutOAuth2ConnectorNotFound() *PutOAuth2ConnectorNotFound {
	return &PutOAuth2ConnectorNotFound{}
}

/* PutOAuth2ConnectorNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutOAuth2ConnectorNotFound struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorNotFound) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors/{id}][%d] putOAuth2ConnectorNotFound  %+v", 404, o.Payload)
}
func (o *PutOAuth2ConnectorNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorInternalServerError creates a PutOAuth2ConnectorInternalServerError with default headers values
func NewPutOAuth2ConnectorInternalServerError() *PutOAuth2ConnectorInternalServerError {
	return &PutOAuth2ConnectorInternalServerError{}
}

/* PutOAuth2ConnectorInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutOAuth2ConnectorInternalServerError struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors/{id}][%d] putOAuth2ConnectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PutOAuth2ConnectorInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
