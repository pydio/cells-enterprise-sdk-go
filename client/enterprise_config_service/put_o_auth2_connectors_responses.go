// Code generated by go-swagger; DO NOT EDIT.

package enterprise_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutOAuth2ConnectorsReader is a Reader for the PutOAuth2Connectors structure.
type PutOAuth2ConnectorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOAuth2ConnectorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutOAuth2ConnectorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutOAuth2ConnectorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutOAuth2ConnectorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutOAuth2ConnectorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutOAuth2ConnectorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutOAuth2ConnectorsOK creates a PutOAuth2ConnectorsOK with default headers values
func NewPutOAuth2ConnectorsOK() *PutOAuth2ConnectorsOK {
	return &PutOAuth2ConnectorsOK{}
}

/* PutOAuth2ConnectorsOK describes a response with status code 200, with default header values.

PutOAuth2ConnectorsOK put o auth2 connectors o k
*/
type PutOAuth2ConnectorsOK struct {
	Payload *models.EntOAuth2ConnectorResponse
}

func (o *PutOAuth2ConnectorsOK) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors][%d] putOAuth2ConnectorsOK  %+v", 200, o.Payload)
}
func (o *PutOAuth2ConnectorsOK) GetPayload() *models.EntOAuth2ConnectorResponse {
	return o.Payload
}

func (o *PutOAuth2ConnectorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntOAuth2ConnectorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorsUnauthorized creates a PutOAuth2ConnectorsUnauthorized with default headers values
func NewPutOAuth2ConnectorsUnauthorized() *PutOAuth2ConnectorsUnauthorized {
	return &PutOAuth2ConnectorsUnauthorized{}
}

/* PutOAuth2ConnectorsUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutOAuth2ConnectorsUnauthorized struct {
}

func (o *PutOAuth2ConnectorsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors][%d] putOAuth2ConnectorsUnauthorized ", 401)
}

func (o *PutOAuth2ConnectorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOAuth2ConnectorsForbidden creates a PutOAuth2ConnectorsForbidden with default headers values
func NewPutOAuth2ConnectorsForbidden() *PutOAuth2ConnectorsForbidden {
	return &PutOAuth2ConnectorsForbidden{}
}

/* PutOAuth2ConnectorsForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutOAuth2ConnectorsForbidden struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorsForbidden) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors][%d] putOAuth2ConnectorsForbidden  %+v", 403, o.Payload)
}
func (o *PutOAuth2ConnectorsForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorsNotFound creates a PutOAuth2ConnectorsNotFound with default headers values
func NewPutOAuth2ConnectorsNotFound() *PutOAuth2ConnectorsNotFound {
	return &PutOAuth2ConnectorsNotFound{}
}

/* PutOAuth2ConnectorsNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutOAuth2ConnectorsNotFound struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorsNotFound) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors][%d] putOAuth2ConnectorsNotFound  %+v", 404, o.Payload)
}
func (o *PutOAuth2ConnectorsNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOAuth2ConnectorsInternalServerError creates a PutOAuth2ConnectorsInternalServerError with default headers values
func NewPutOAuth2ConnectorsInternalServerError() *PutOAuth2ConnectorsInternalServerError {
	return &PutOAuth2ConnectorsInternalServerError{}
}

/* PutOAuth2ConnectorsInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutOAuth2ConnectorsInternalServerError struct {
	Payload *models.RestError
}

func (o *PutOAuth2ConnectorsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config/oauth2connectors][%d] putOAuth2ConnectorsInternalServerError  %+v", 500, o.Payload)
}
func (o *PutOAuth2ConnectorsInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutOAuth2ConnectorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
