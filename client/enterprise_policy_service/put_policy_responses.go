// Code generated by go-swagger; DO NOT EDIT.

package enterprise_policy_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutPolicyReader is a Reader for the PutPolicy structure.
type PutPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutPolicyOK creates a PutPolicyOK with default headers values
func NewPutPolicyOK() *PutPolicyOK {
	return &PutPolicyOK{}
}

/*
PutPolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type PutPolicyOK struct {
	Payload *models.IdmPolicyGroup
}

// IsSuccess returns true when this put policy o k response has a 2xx status code
func (o *PutPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put policy o k response has a 3xx status code
func (o *PutPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put policy o k response has a 4xx status code
func (o *PutPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put policy o k response has a 5xx status code
func (o *PutPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put policy o k response a status code equal to that given
func (o *PutPolicyOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutPolicyOK) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyOK  %+v", 200, o.Payload)
}

func (o *PutPolicyOK) String() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyOK  %+v", 200, o.Payload)
}

func (o *PutPolicyOK) GetPayload() *models.IdmPolicyGroup {
	return o.Payload
}

func (o *PutPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdmPolicyGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPolicyUnauthorized creates a PutPolicyUnauthorized with default headers values
func NewPutPolicyUnauthorized() *PutPolicyUnauthorized {
	return &PutPolicyUnauthorized{}
}

/*
PutPolicyUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutPolicyUnauthorized struct {
}

// IsSuccess returns true when this put policy unauthorized response has a 2xx status code
func (o *PutPolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put policy unauthorized response has a 3xx status code
func (o *PutPolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put policy unauthorized response has a 4xx status code
func (o *PutPolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put policy unauthorized response has a 5xx status code
func (o *PutPolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put policy unauthorized response a status code equal to that given
func (o *PutPolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyUnauthorized ", 401)
}

func (o *PutPolicyUnauthorized) String() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyUnauthorized ", 401)
}

func (o *PutPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPolicyForbidden creates a PutPolicyForbidden with default headers values
func NewPutPolicyForbidden() *PutPolicyForbidden {
	return &PutPolicyForbidden{}
}

/*
PutPolicyForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutPolicyForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this put policy forbidden response has a 2xx status code
func (o *PutPolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put policy forbidden response has a 3xx status code
func (o *PutPolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put policy forbidden response has a 4xx status code
func (o *PutPolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put policy forbidden response has a 5xx status code
func (o *PutPolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put policy forbidden response a status code equal to that given
func (o *PutPolicyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutPolicyForbidden) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyForbidden  %+v", 403, o.Payload)
}

func (o *PutPolicyForbidden) String() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyForbidden  %+v", 403, o.Payload)
}

func (o *PutPolicyForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPolicyNotFound creates a PutPolicyNotFound with default headers values
func NewPutPolicyNotFound() *PutPolicyNotFound {
	return &PutPolicyNotFound{}
}

/*
PutPolicyNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutPolicyNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this put policy not found response has a 2xx status code
func (o *PutPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put policy not found response has a 3xx status code
func (o *PutPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put policy not found response has a 4xx status code
func (o *PutPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put policy not found response has a 5xx status code
func (o *PutPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put policy not found response a status code equal to that given
func (o *PutPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutPolicyNotFound) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyNotFound  %+v", 404, o.Payload)
}

func (o *PutPolicyNotFound) String() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyNotFound  %+v", 404, o.Payload)
}

func (o *PutPolicyNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPolicyInternalServerError creates a PutPolicyInternalServerError with default headers values
func NewPutPolicyInternalServerError() *PutPolicyInternalServerError {
	return &PutPolicyInternalServerError{}
}

/*
PutPolicyInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutPolicyInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this put policy internal server error response has a 2xx status code
func (o *PutPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put policy internal server error response has a 3xx status code
func (o *PutPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put policy internal server error response has a 4xx status code
func (o *PutPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put policy internal server error response has a 5xx status code
func (o *PutPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put policy internal server error response a status code equal to that given
func (o *PutPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPolicyInternalServerError) String() string {
	return fmt.Sprintf("[PUT /policy][%d] putPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *PutPolicyInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPolicyDefault creates a PutPolicyDefault with default headers values
func NewPutPolicyDefault(code int) *PutPolicyDefault {
	return &PutPolicyDefault{
		_statusCode: code,
	}
}

/*
PutPolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PutPolicyDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the put policy default response
func (o *PutPolicyDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this put policy default response has a 2xx status code
func (o *PutPolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put policy default response has a 3xx status code
func (o *PutPolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put policy default response has a 4xx status code
func (o *PutPolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put policy default response has a 5xx status code
func (o *PutPolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put policy default response a status code equal to that given
func (o *PutPolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PutPolicyDefault) Error() string {
	return fmt.Sprintf("[PUT /policy][%d] PutPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *PutPolicyDefault) String() string {
	return fmt.Sprintf("[PUT /policy][%d] PutPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *PutPolicyDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PutPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
