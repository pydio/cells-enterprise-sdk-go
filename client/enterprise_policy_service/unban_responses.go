// Code generated by go-swagger; DO NOT EDIT.

package enterprise_policy_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// UnbanReader is a Reader for the Unban structure.
type UnbanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnbanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnbanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUnbanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnbanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnbanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnbanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnbanOK creates a UnbanOK with default headers values
func NewUnbanOK() *UnbanOK {
	return &UnbanOK{}
}

/* UnbanOK describes a response with status code 200, with default header values.

UnbanOK unban o k
*/
type UnbanOK struct {
	Payload *models.IpbanUnbanResponse
}

func (o *UnbanOK) Error() string {
	return fmt.Sprintf("[POST /policy/ipbans][%d] unbanOK  %+v", 200, o.Payload)
}
func (o *UnbanOK) GetPayload() *models.IpbanUnbanResponse {
	return o.Payload
}

func (o *UnbanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpbanUnbanResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbanUnauthorized creates a UnbanUnauthorized with default headers values
func NewUnbanUnauthorized() *UnbanUnauthorized {
	return &UnbanUnauthorized{}
}

/* UnbanUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type UnbanUnauthorized struct {
}

func (o *UnbanUnauthorized) Error() string {
	return fmt.Sprintf("[POST /policy/ipbans][%d] unbanUnauthorized ", 401)
}

func (o *UnbanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnbanForbidden creates a UnbanForbidden with default headers values
func NewUnbanForbidden() *UnbanForbidden {
	return &UnbanForbidden{}
}

/* UnbanForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type UnbanForbidden struct {
	Payload *models.RestError
}

func (o *UnbanForbidden) Error() string {
	return fmt.Sprintf("[POST /policy/ipbans][%d] unbanForbidden  %+v", 403, o.Payload)
}
func (o *UnbanForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UnbanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbanNotFound creates a UnbanNotFound with default headers values
func NewUnbanNotFound() *UnbanNotFound {
	return &UnbanNotFound{}
}

/* UnbanNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type UnbanNotFound struct {
	Payload *models.RestError
}

func (o *UnbanNotFound) Error() string {
	return fmt.Sprintf("[POST /policy/ipbans][%d] unbanNotFound  %+v", 404, o.Payload)
}
func (o *UnbanNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UnbanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbanInternalServerError creates a UnbanInternalServerError with default headers values
func NewUnbanInternalServerError() *UnbanInternalServerError {
	return &UnbanInternalServerError{}
}

/* UnbanInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type UnbanInternalServerError struct {
	Payload *models.RestError
}

func (o *UnbanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /policy/ipbans][%d] unbanInternalServerError  %+v", 500, o.Payload)
}
func (o *UnbanInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UnbanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
