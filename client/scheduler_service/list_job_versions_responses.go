// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// ListJobVersionsReader is a Reader for the ListJobVersions structure.
type ListJobVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListJobVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListJobVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListJobVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListJobVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListJobVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListJobVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListJobVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListJobVersionsOK creates a ListJobVersionsOK with default headers values
func NewListJobVersionsOK() *ListJobVersionsOK {
	return &ListJobVersionsOK{}
}

/*
ListJobVersionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListJobVersionsOK struct {
	Payload *models.EntListJobVersionsResponse
}

// IsSuccess returns true when this list job versions o k response has a 2xx status code
func (o *ListJobVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list job versions o k response has a 3xx status code
func (o *ListJobVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list job versions o k response has a 4xx status code
func (o *ListJobVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list job versions o k response has a 5xx status code
func (o *ListJobVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list job versions o k response a status code equal to that given
func (o *ListJobVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list job versions o k response
func (o *ListJobVersionsOK) Code() int {
	return 200
}

func (o *ListJobVersionsOK) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsOK  %+v", 200, o.Payload)
}

func (o *ListJobVersionsOK) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsOK  %+v", 200, o.Payload)
}

func (o *ListJobVersionsOK) GetPayload() *models.EntListJobVersionsResponse {
	return o.Payload
}

func (o *ListJobVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntListJobVersionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobVersionsUnauthorized creates a ListJobVersionsUnauthorized with default headers values
func NewListJobVersionsUnauthorized() *ListJobVersionsUnauthorized {
	return &ListJobVersionsUnauthorized{}
}

/*
ListJobVersionsUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListJobVersionsUnauthorized struct {
}

// IsSuccess returns true when this list job versions unauthorized response has a 2xx status code
func (o *ListJobVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list job versions unauthorized response has a 3xx status code
func (o *ListJobVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list job versions unauthorized response has a 4xx status code
func (o *ListJobVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list job versions unauthorized response has a 5xx status code
func (o *ListJobVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list job versions unauthorized response a status code equal to that given
func (o *ListJobVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list job versions unauthorized response
func (o *ListJobVersionsUnauthorized) Code() int {
	return 401
}

func (o *ListJobVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsUnauthorized ", 401)
}

func (o *ListJobVersionsUnauthorized) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsUnauthorized ", 401)
}

func (o *ListJobVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListJobVersionsForbidden creates a ListJobVersionsForbidden with default headers values
func NewListJobVersionsForbidden() *ListJobVersionsForbidden {
	return &ListJobVersionsForbidden{}
}

/*
ListJobVersionsForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type ListJobVersionsForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list job versions forbidden response has a 2xx status code
func (o *ListJobVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list job versions forbidden response has a 3xx status code
func (o *ListJobVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list job versions forbidden response has a 4xx status code
func (o *ListJobVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list job versions forbidden response has a 5xx status code
func (o *ListJobVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list job versions forbidden response a status code equal to that given
func (o *ListJobVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list job versions forbidden response
func (o *ListJobVersionsForbidden) Code() int {
	return 403
}

func (o *ListJobVersionsForbidden) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsForbidden  %+v", 403, o.Payload)
}

func (o *ListJobVersionsForbidden) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsForbidden  %+v", 403, o.Payload)
}

func (o *ListJobVersionsForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListJobVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobVersionsNotFound creates a ListJobVersionsNotFound with default headers values
func NewListJobVersionsNotFound() *ListJobVersionsNotFound {
	return &ListJobVersionsNotFound{}
}

/*
ListJobVersionsNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ListJobVersionsNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list job versions not found response has a 2xx status code
func (o *ListJobVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list job versions not found response has a 3xx status code
func (o *ListJobVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list job versions not found response has a 4xx status code
func (o *ListJobVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list job versions not found response has a 5xx status code
func (o *ListJobVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list job versions not found response a status code equal to that given
func (o *ListJobVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list job versions not found response
func (o *ListJobVersionsNotFound) Code() int {
	return 404
}

func (o *ListJobVersionsNotFound) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsNotFound  %+v", 404, o.Payload)
}

func (o *ListJobVersionsNotFound) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsNotFound  %+v", 404, o.Payload)
}

func (o *ListJobVersionsNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListJobVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobVersionsInternalServerError creates a ListJobVersionsInternalServerError with default headers values
func NewListJobVersionsInternalServerError() *ListJobVersionsInternalServerError {
	return &ListJobVersionsInternalServerError{}
}

/*
ListJobVersionsInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ListJobVersionsInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list job versions internal server error response has a 2xx status code
func (o *ListJobVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list job versions internal server error response has a 3xx status code
func (o *ListJobVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list job versions internal server error response has a 4xx status code
func (o *ListJobVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list job versions internal server error response has a 5xx status code
func (o *ListJobVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list job versions internal server error response a status code equal to that given
func (o *ListJobVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list job versions internal server error response
func (o *ListJobVersionsInternalServerError) Code() int {
	return 500
}

func (o *ListJobVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListJobVersionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] listJobVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListJobVersionsInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListJobVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobVersionsDefault creates a ListJobVersionsDefault with default headers values
func NewListJobVersionsDefault(code int) *ListJobVersionsDefault {
	return &ListJobVersionsDefault{
		_statusCode: code,
	}
}

/*
ListJobVersionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListJobVersionsDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this list job versions default response has a 2xx status code
func (o *ListJobVersionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list job versions default response has a 3xx status code
func (o *ListJobVersionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list job versions default response has a 4xx status code
func (o *ListJobVersionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list job versions default response has a 5xx status code
func (o *ListJobVersionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list job versions default response a status code equal to that given
func (o *ListJobVersionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list job versions default response
func (o *ListJobVersionsDefault) Code() int {
	return o._statusCode
}

func (o *ListJobVersionsDefault) Error() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] ListJobVersions default  %+v", o._statusCode, o.Payload)
}

func (o *ListJobVersionsDefault) String() string {
	return fmt.Sprintf("[POST /scheduler/versions/{JobID}][%d] ListJobVersions default  %+v", o._statusCode, o.Payload)
}

func (o *ListJobVersionsDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ListJobVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListJobVersionsBody list job versions body
swagger:model ListJobVersionsBody
*/
type ListJobVersionsBody struct {

	// limit
	Limit int32 `json:"Limit,omitempty"`

	// load jobs
	LoadJobs bool `json:"LoadJobs,omitempty"`

	// offset
	Offset int32 `json:"Offset,omitempty"`
}

// Validate validates this list job versions body
func (o *ListJobVersionsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list job versions body based on context it is used
func (o *ListJobVersionsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListJobVersionsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListJobVersionsBody) UnmarshalBinary(b []byte) error {
	var res ListJobVersionsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
