// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutJobReader is a Reader for the PutJob structure.
type PutJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutJobOK creates a PutJobOK with default headers values
func NewPutJobOK() *PutJobOK {
	return &PutJobOK{}
}

/* PutJobOK describes a response with status code 200, with default header values.

PutJobOK put job o k
*/
type PutJobOK struct {
	Payload *models.JobsPutJobResponse
}

func (o *PutJobOK) Error() string {
	return fmt.Sprintf("[PUT /scheduler/jobs][%d] putJobOK  %+v", 200, o.Payload)
}
func (o *PutJobOK) GetPayload() *models.JobsPutJobResponse {
	return o.Payload
}

func (o *PutJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobsPutJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobUnauthorized creates a PutJobUnauthorized with default headers values
func NewPutJobUnauthorized() *PutJobUnauthorized {
	return &PutJobUnauthorized{}
}

/* PutJobUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutJobUnauthorized struct {
}

func (o *PutJobUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /scheduler/jobs][%d] putJobUnauthorized ", 401)
}

func (o *PutJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutJobForbidden creates a PutJobForbidden with default headers values
func NewPutJobForbidden() *PutJobForbidden {
	return &PutJobForbidden{}
}

/* PutJobForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutJobForbidden struct {
	Payload *models.RestError
}

func (o *PutJobForbidden) Error() string {
	return fmt.Sprintf("[PUT /scheduler/jobs][%d] putJobForbidden  %+v", 403, o.Payload)
}
func (o *PutJobForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobNotFound creates a PutJobNotFound with default headers values
func NewPutJobNotFound() *PutJobNotFound {
	return &PutJobNotFound{}
}

/* PutJobNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutJobNotFound struct {
	Payload *models.RestError
}

func (o *PutJobNotFound) Error() string {
	return fmt.Sprintf("[PUT /scheduler/jobs][%d] putJobNotFound  %+v", 404, o.Payload)
}
func (o *PutJobNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobInternalServerError creates a PutJobInternalServerError with default headers values
func NewPutJobInternalServerError() *PutJobInternalServerError {
	return &PutJobInternalServerError{}
}

/* PutJobInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutJobInternalServerError struct {
	Payload *models.RestError
}

func (o *PutJobInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /scheduler/jobs][%d] putJobInternalServerError  %+v", 500, o.Payload)
}
func (o *PutJobInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
