// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// DeleteSelectorTemplateReader is a Reader for the DeleteSelectorTemplate structure.
type DeleteSelectorTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSelectorTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSelectorTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteSelectorTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSelectorTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSelectorTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSelectorTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSelectorTemplateOK creates a DeleteSelectorTemplateOK with default headers values
func NewDeleteSelectorTemplateOK() *DeleteSelectorTemplateOK {
	return &DeleteSelectorTemplateOK{}
}

/* DeleteSelectorTemplateOK describes a response with status code 200, with default header values.

DeleteSelectorTemplateOK delete selector template o k
*/
type DeleteSelectorTemplateOK struct {
	Payload *models.EntDeleteSelectorTemplateResponse
}

func (o *DeleteSelectorTemplateOK) Error() string {
	return fmt.Sprintf("[DELETE /scheduler/templates/selectors/{TemplateName}][%d] deleteSelectorTemplateOK  %+v", 200, o.Payload)
}
func (o *DeleteSelectorTemplateOK) GetPayload() *models.EntDeleteSelectorTemplateResponse {
	return o.Payload
}

func (o *DeleteSelectorTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntDeleteSelectorTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSelectorTemplateUnauthorized creates a DeleteSelectorTemplateUnauthorized with default headers values
func NewDeleteSelectorTemplateUnauthorized() *DeleteSelectorTemplateUnauthorized {
	return &DeleteSelectorTemplateUnauthorized{}
}

/* DeleteSelectorTemplateUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type DeleteSelectorTemplateUnauthorized struct {
}

func (o *DeleteSelectorTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /scheduler/templates/selectors/{TemplateName}][%d] deleteSelectorTemplateUnauthorized ", 401)
}

func (o *DeleteSelectorTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSelectorTemplateForbidden creates a DeleteSelectorTemplateForbidden with default headers values
func NewDeleteSelectorTemplateForbidden() *DeleteSelectorTemplateForbidden {
	return &DeleteSelectorTemplateForbidden{}
}

/* DeleteSelectorTemplateForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type DeleteSelectorTemplateForbidden struct {
	Payload *models.RestError
}

func (o *DeleteSelectorTemplateForbidden) Error() string {
	return fmt.Sprintf("[DELETE /scheduler/templates/selectors/{TemplateName}][%d] deleteSelectorTemplateForbidden  %+v", 403, o.Payload)
}
func (o *DeleteSelectorTemplateForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteSelectorTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSelectorTemplateNotFound creates a DeleteSelectorTemplateNotFound with default headers values
func NewDeleteSelectorTemplateNotFound() *DeleteSelectorTemplateNotFound {
	return &DeleteSelectorTemplateNotFound{}
}

/* DeleteSelectorTemplateNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type DeleteSelectorTemplateNotFound struct {
	Payload *models.RestError
}

func (o *DeleteSelectorTemplateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /scheduler/templates/selectors/{TemplateName}][%d] deleteSelectorTemplateNotFound  %+v", 404, o.Payload)
}
func (o *DeleteSelectorTemplateNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteSelectorTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSelectorTemplateInternalServerError creates a DeleteSelectorTemplateInternalServerError with default headers values
func NewDeleteSelectorTemplateInternalServerError() *DeleteSelectorTemplateInternalServerError {
	return &DeleteSelectorTemplateInternalServerError{}
}

/* DeleteSelectorTemplateInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type DeleteSelectorTemplateInternalServerError struct {
	Payload *models.RestError
}

func (o *DeleteSelectorTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /scheduler/templates/selectors/{TemplateName}][%d] deleteSelectorTemplateInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteSelectorTemplateInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteSelectorTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
