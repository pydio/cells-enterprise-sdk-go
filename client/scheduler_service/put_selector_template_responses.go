// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutSelectorTemplateReader is a Reader for the PutSelectorTemplate structure.
type PutSelectorTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSelectorTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutSelectorTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutSelectorTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSelectorTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSelectorTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutSelectorTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutSelectorTemplateOK creates a PutSelectorTemplateOK with default headers values
func NewPutSelectorTemplateOK() *PutSelectorTemplateOK {
	return &PutSelectorTemplateOK{}
}

/* PutSelectorTemplateOK describes a response with status code 200, with default header values.

PutSelectorTemplateOK put selector template o k
*/
type PutSelectorTemplateOK struct {
	Payload *models.EntPutSelectorTemplateResponse
}

func (o *PutSelectorTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/selectors][%d] putSelectorTemplateOK  %+v", 200, o.Payload)
}
func (o *PutSelectorTemplateOK) GetPayload() *models.EntPutSelectorTemplateResponse {
	return o.Payload
}

func (o *PutSelectorTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntPutSelectorTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSelectorTemplateUnauthorized creates a PutSelectorTemplateUnauthorized with default headers values
func NewPutSelectorTemplateUnauthorized() *PutSelectorTemplateUnauthorized {
	return &PutSelectorTemplateUnauthorized{}
}

/* PutSelectorTemplateUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutSelectorTemplateUnauthorized struct {
}

func (o *PutSelectorTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/selectors][%d] putSelectorTemplateUnauthorized ", 401)
}

func (o *PutSelectorTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSelectorTemplateForbidden creates a PutSelectorTemplateForbidden with default headers values
func NewPutSelectorTemplateForbidden() *PutSelectorTemplateForbidden {
	return &PutSelectorTemplateForbidden{}
}

/* PutSelectorTemplateForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutSelectorTemplateForbidden struct {
	Payload *models.RestError
}

func (o *PutSelectorTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/selectors][%d] putSelectorTemplateForbidden  %+v", 403, o.Payload)
}
func (o *PutSelectorTemplateForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutSelectorTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSelectorTemplateNotFound creates a PutSelectorTemplateNotFound with default headers values
func NewPutSelectorTemplateNotFound() *PutSelectorTemplateNotFound {
	return &PutSelectorTemplateNotFound{}
}

/* PutSelectorTemplateNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutSelectorTemplateNotFound struct {
	Payload *models.RestError
}

func (o *PutSelectorTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/selectors][%d] putSelectorTemplateNotFound  %+v", 404, o.Payload)
}
func (o *PutSelectorTemplateNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutSelectorTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSelectorTemplateInternalServerError creates a PutSelectorTemplateInternalServerError with default headers values
func NewPutSelectorTemplateInternalServerError() *PutSelectorTemplateInternalServerError {
	return &PutSelectorTemplateInternalServerError{}
}

/* PutSelectorTemplateInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutSelectorTemplateInternalServerError struct {
	Payload *models.RestError
}

func (o *PutSelectorTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/selectors][%d] putSelectorTemplateInternalServerError  %+v", 500, o.Payload)
}
func (o *PutSelectorTemplateInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutSelectorTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
