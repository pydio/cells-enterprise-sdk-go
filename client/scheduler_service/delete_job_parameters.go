// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteJobParams creates a new DeleteJobParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteJobParams() *DeleteJobParams {
	return &DeleteJobParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteJobParamsWithTimeout creates a new DeleteJobParams object
// with the ability to set a timeout on a request.
func NewDeleteJobParamsWithTimeout(timeout time.Duration) *DeleteJobParams {
	return &DeleteJobParams{
		timeout: timeout,
	}
}

// NewDeleteJobParamsWithContext creates a new DeleteJobParams object
// with the ability to set a context for a request.
func NewDeleteJobParamsWithContext(ctx context.Context) *DeleteJobParams {
	return &DeleteJobParams{
		Context: ctx,
	}
}

// NewDeleteJobParamsWithHTTPClient creates a new DeleteJobParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteJobParamsWithHTTPClient(client *http.Client) *DeleteJobParams {
	return &DeleteJobParams{
		HTTPClient: client,
	}
}

/*
DeleteJobParams contains all the parameters to send to the API endpoint

	for the delete job operation.

	Typically these are written to a http.Request.
*/
type DeleteJobParams struct {

	// CleanableJobs.
	CleanableJobs *bool

	// JobID.
	JobID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteJobParams) WithDefaults() *DeleteJobParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete job params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteJobParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete job params
func (o *DeleteJobParams) WithTimeout(timeout time.Duration) *DeleteJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete job params
func (o *DeleteJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete job params
func (o *DeleteJobParams) WithContext(ctx context.Context) *DeleteJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete job params
func (o *DeleteJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete job params
func (o *DeleteJobParams) WithHTTPClient(client *http.Client) *DeleteJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete job params
func (o *DeleteJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCleanableJobs adds the cleanableJobs to the delete job params
func (o *DeleteJobParams) WithCleanableJobs(cleanableJobs *bool) *DeleteJobParams {
	o.SetCleanableJobs(cleanableJobs)
	return o
}

// SetCleanableJobs adds the cleanableJobs to the delete job params
func (o *DeleteJobParams) SetCleanableJobs(cleanableJobs *bool) {
	o.CleanableJobs = cleanableJobs
}

// WithJobID adds the jobID to the delete job params
func (o *DeleteJobParams) WithJobID(jobID string) *DeleteJobParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the delete job params
func (o *DeleteJobParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CleanableJobs != nil {

		// query param CleanableJobs
		var qrCleanableJobs bool

		if o.CleanableJobs != nil {
			qrCleanableJobs = *o.CleanableJobs
		}
		qCleanableJobs := swag.FormatBool(qrCleanableJobs)
		if qCleanableJobs != "" {

			if err := r.SetQueryParam("CleanableJobs", qCleanableJobs); err != nil {
				return err
			}
		}
	}

	// path param JobID
	if err := r.SetPathParam("JobID", o.JobID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
