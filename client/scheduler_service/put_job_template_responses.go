// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// PutJobTemplateReader is a Reader for the PutJobTemplate structure.
type PutJobTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutJobTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutJobTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutJobTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutJobTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutJobTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutJobTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutJobTemplateOK creates a PutJobTemplateOK with default headers values
func NewPutJobTemplateOK() *PutJobTemplateOK {
	return &PutJobTemplateOK{}
}

/* PutJobTemplateOK describes a response with status code 200, with default header values.

PutJobTemplateOK put job template o k
*/
type PutJobTemplateOK struct {
	Payload *models.EntPutJobTemplateResponse
}

func (o *PutJobTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/jobs/{Name}][%d] putJobTemplateOK  %+v", 200, o.Payload)
}
func (o *PutJobTemplateOK) GetPayload() *models.EntPutJobTemplateResponse {
	return o.Payload
}

func (o *PutJobTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntPutJobTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobTemplateUnauthorized creates a PutJobTemplateUnauthorized with default headers values
func NewPutJobTemplateUnauthorized() *PutJobTemplateUnauthorized {
	return &PutJobTemplateUnauthorized{}
}

/* PutJobTemplateUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PutJobTemplateUnauthorized struct {
}

func (o *PutJobTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/jobs/{Name}][%d] putJobTemplateUnauthorized ", 401)
}

func (o *PutJobTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutJobTemplateForbidden creates a PutJobTemplateForbidden with default headers values
func NewPutJobTemplateForbidden() *PutJobTemplateForbidden {
	return &PutJobTemplateForbidden{}
}

/* PutJobTemplateForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PutJobTemplateForbidden struct {
	Payload *models.RestError
}

func (o *PutJobTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/jobs/{Name}][%d] putJobTemplateForbidden  %+v", 403, o.Payload)
}
func (o *PutJobTemplateForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobTemplateNotFound creates a PutJobTemplateNotFound with default headers values
func NewPutJobTemplateNotFound() *PutJobTemplateNotFound {
	return &PutJobTemplateNotFound{}
}

/* PutJobTemplateNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PutJobTemplateNotFound struct {
	Payload *models.RestError
}

func (o *PutJobTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/jobs/{Name}][%d] putJobTemplateNotFound  %+v", 404, o.Payload)
}
func (o *PutJobTemplateNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutJobTemplateInternalServerError creates a PutJobTemplateInternalServerError with default headers values
func NewPutJobTemplateInternalServerError() *PutJobTemplateInternalServerError {
	return &PutJobTemplateInternalServerError{}
}

/* PutJobTemplateInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PutJobTemplateInternalServerError struct {
	Payload *models.RestError
}

func (o *PutJobTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /scheduler/templates/jobs/{Name}][%d] putJobTemplateInternalServerError  %+v", 500, o.Payload)
}
func (o *PutJobTemplateInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PutJobTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
