// Code generated by go-swagger; DO NOT EDIT.

package scheduler_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-enterprise-sdk-go/models"
)

// ExecutePlaygroundCodeReader is a Reader for the ExecutePlaygroundCode structure.
type ExecutePlaygroundCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExecutePlaygroundCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExecutePlaygroundCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExecutePlaygroundCodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExecutePlaygroundCodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExecutePlaygroundCodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExecutePlaygroundCodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExecutePlaygroundCodeOK creates a ExecutePlaygroundCodeOK with default headers values
func NewExecutePlaygroundCodeOK() *ExecutePlaygroundCodeOK {
	return &ExecutePlaygroundCodeOK{}
}

/* ExecutePlaygroundCodeOK describes a response with status code 200, with default header values.

ExecutePlaygroundCodeOK execute playground code o k
*/
type ExecutePlaygroundCodeOK struct {
	Payload *models.EntPlaygroundResponse
}

func (o *ExecutePlaygroundCodeOK) Error() string {
	return fmt.Sprintf("[POST /scheduler/templates/playground][%d] executePlaygroundCodeOK  %+v", 200, o.Payload)
}
func (o *ExecutePlaygroundCodeOK) GetPayload() *models.EntPlaygroundResponse {
	return o.Payload
}

func (o *ExecutePlaygroundCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntPlaygroundResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecutePlaygroundCodeUnauthorized creates a ExecutePlaygroundCodeUnauthorized with default headers values
func NewExecutePlaygroundCodeUnauthorized() *ExecutePlaygroundCodeUnauthorized {
	return &ExecutePlaygroundCodeUnauthorized{}
}

/* ExecutePlaygroundCodeUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ExecutePlaygroundCodeUnauthorized struct {
}

func (o *ExecutePlaygroundCodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /scheduler/templates/playground][%d] executePlaygroundCodeUnauthorized ", 401)
}

func (o *ExecutePlaygroundCodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecutePlaygroundCodeForbidden creates a ExecutePlaygroundCodeForbidden with default headers values
func NewExecutePlaygroundCodeForbidden() *ExecutePlaygroundCodeForbidden {
	return &ExecutePlaygroundCodeForbidden{}
}

/* ExecutePlaygroundCodeForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type ExecutePlaygroundCodeForbidden struct {
	Payload *models.RestError
}

func (o *ExecutePlaygroundCodeForbidden) Error() string {
	return fmt.Sprintf("[POST /scheduler/templates/playground][%d] executePlaygroundCodeForbidden  %+v", 403, o.Payload)
}
func (o *ExecutePlaygroundCodeForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ExecutePlaygroundCodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecutePlaygroundCodeNotFound creates a ExecutePlaygroundCodeNotFound with default headers values
func NewExecutePlaygroundCodeNotFound() *ExecutePlaygroundCodeNotFound {
	return &ExecutePlaygroundCodeNotFound{}
}

/* ExecutePlaygroundCodeNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ExecutePlaygroundCodeNotFound struct {
	Payload *models.RestError
}

func (o *ExecutePlaygroundCodeNotFound) Error() string {
	return fmt.Sprintf("[POST /scheduler/templates/playground][%d] executePlaygroundCodeNotFound  %+v", 404, o.Payload)
}
func (o *ExecutePlaygroundCodeNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ExecutePlaygroundCodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecutePlaygroundCodeInternalServerError creates a ExecutePlaygroundCodeInternalServerError with default headers values
func NewExecutePlaygroundCodeInternalServerError() *ExecutePlaygroundCodeInternalServerError {
	return &ExecutePlaygroundCodeInternalServerError{}
}

/* ExecutePlaygroundCodeInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ExecutePlaygroundCodeInternalServerError struct {
	Payload *models.RestError
}

func (o *ExecutePlaygroundCodeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /scheduler/templates/playground][%d] executePlaygroundCodeInternalServerError  %+v", 500, o.Payload)
}
func (o *ExecutePlaygroundCodeInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ExecutePlaygroundCodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
